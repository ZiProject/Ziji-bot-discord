name: Node.js CI

permissions:
  contents: write
  issues: write
  pull-requests: write

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  format-fix-on-push:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN  }}
          fetch-depth: 0

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      - name: Run Prettier (write)
        run: npx prettier --ignore-path .gitignore --write .

      - name: Commit changes
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add .
          git diff --cached --exit-code || git commit -m "chore: format with prettier"

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN  }}
          branch: ${{ github.head_ref || github.ref_name }}

  format-check-on-pr:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      - name: Check Prettier (list different)
        id: prettier
        shell: bash
        run: |
          set -e
          OUTPUT="$(npx prettier --ignore-path .gitignore -l . || true)"
          echo "files<<EOF" >> "$GITHUB_OUTPUT"
          echo "$OUTPUT" >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"
          if [ -n "$OUTPUT" ]; then
            echo "has_issues=true" >> "$GITHUB_OUTPUT"
          else
            echo "has_issues=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Comment on PR with Prettier results
        if: steps.prettier.outputs.has_issues == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const files = `${{ steps.prettier.outputs.files }}`.trim();
            const marker = '<!-- prettier-format-report -->';
            const body = [
              marker,
              'Some files are not formatted by Prettier:',
              '',
              '```',
              files,
              '```',
              '',
              'Run the following to fix formatting:',
              '',
              '```sh',
              'npm run format',
              '```'
            ].join('\n');
            const { owner, repo } = context.repo;
            const issue_number = context.issue.number;
            const list = await github.rest.issues.listComments({ owner, repo, issue_number, per_page: 100 });
            const existing = list.data.find(c => c.user && c.user.type === 'Bot' && c.body && c.body.includes(marker));
            if (existing) {
              await github.rest.issues.updateComment({ owner, repo, comment_id: existing.id, body });
            } else {
              await github.rest.issues.createComment({ owner, repo, issue_number, body });
            }

      - name: Fail if formatting issues found
        if: steps.prettier.outputs.has_issues == 'true'
        run: |
          echo "Formatting issues detected. Please run 'npm run format'." >&2
          exit 1
