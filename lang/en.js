const config = require("@zibot/zihooks").useHooks.get("config");
module.exports = {
	name: "en",
	local_names: "en_US",
	color: config?.defaultColor,
	botConfig: config?.botConfig,
	until: {
		success: "Successfully executed this command!",
		notHavePremission: "You do not have permission to execute this command!",
		name: "English",
		langChange: "Your language has been changed to:",
		requestBy: "Requested by:",
		noDB: "‚ùå | Database is not currently enabled, please contact dev bot",
		noGuild: "‚ùå | This command can only be executed on the guild.",
		botNOPermission: "‚ùå | Bot does not have permission: {Permission} to execute this command!",
		NOPermission: "‚ùå | Bot does not have permission to chat and execute command in this channel",
		noPermission: "‚ùå | You do not have permission to execute this command!",
		cooldown: "Please wait, you are on a cooldown for `{command}`! You can use it again {time}.",
		goodbye: "Goodbye",
		noresult: "‚ùå | No result",
		banned: "‚ùå | You are banned from using the bot. Please contact developers for more details",
	},
	BotStats: {
		Description: "Bot stats",
		OS: "Curent OS",
		djsVersion: "Discord.js version",
		dplVersion: "Discord-player version",
		RAMUsage: "RAM usage",
		Server: "Total server",
		User: "User Count",
		Voice: "Connected Voice",
		Command: "Command Count",
		Operation: "Operation Time",
	},
	Help: {
		Placeholder: "> | Select a category to view the commands",
		GuildCommands: "Guild Commands",
		ContextCommands: "Context Commands",
		PlayerButtons: "Player Commands",
		VoiceCommands: "Voice Commands",
		GuildCommandsDescription: "View the list of commands that can be used in the server",
		ContextCommandsDescription: "View the list of commands that can be used in the context menu",
		PlayerButtonsDescription: "View the list of buttons that can be used in the music player",
		VoiceCommandsDescription: "View the list of commands that can be used by voice",
		Attention: "Attention:",
		Note: "Note:",
	},
	TicTacToe: {
		turnMessage: "{emoji} | Its turn of player **{player}**.",
		winMessage: "{emoji} | **{player}** won the TicTacToe Game.",
		tieMessage: "The Game tied! No one won the Game!",
		timeoutMessage: "The Game went unfinished! No one won the Game!",
		playerOnlyMessage: "Only {player} and {opponent} can use these buttons.",
	},
	Coinflip: {
		chosen: "You chose",
		result: "Result",
		head: "Heads",
		tail: "Tails",
		win: "You guessed correctly!",
		lose: "You guessed wrong!",
	},
	Ping: {
		Description: "Hey ##username##! Here's my **latency** and **ping** status:",
		Roundtrip: "üîÑ Round-trip Latency",
		Websocket: "üåê WebSocket Ping",
		Latency: "üìâ Latency Status",
		Timestamp: "üìÖ Current Timestamp",
		Poor: "üî¥ Poor",
		Good: "üü° Good",
		Excellent: "üü¢ Excellent",
	},
	UserInfo: {
		Title: "User information",
		Username: "Username",
		UserID: "User ID",
		JoinedAt: "Server joined at",
		NotServerMember: "Not a member in this server",
		UserJoined: "Account created at",
	},
	Giveaways: {
		notify: "Giveaway started at",
		notTextChannel: "The selected channel must be a text channel.",
		giveaway: "üéâ **Giveaway** üéâ",
		giveawayPaused: "‚ö† Giveaway is paused ‚ö†",
		giveawayEnded: "üéâ **Giveaway ended** üéâ",
		title: "{this.prize}",
		drawing: "Time remaining: **{timestamp}**!",
		inviteToParticipate: "React with üéâ to participate!",
		hostedBy: "Hosted by {this.hostedBy}",
		dropMessage: "Be the first to react with üéâ!",
		winMessage: "Congratulations, {winners}! You won **{this.prize}**!\n{this.messageURL}",
		embedFooter: "Giveaways with {this.winnerCount} prizes",
		noWinner: "Giveaway cancelled, no valid participants.",
		winners: "Winners:",
		endedAt: "Ended at",
	},
	playerButtons: {
		Refresh: "Refresh",
		Previous: "Previous",
		Next: "Next",
		PausePlay: "Pause/Play",
		Stop: "Stop",
		Search: "Search",
		AutoPlay: "AutoPlay",
		SelectTrack: "Select Track",
		Lock: "Lock",
		UnLock: "UnLock",
		SelectFunc: "Select Func",
	},
	playerFunc: {
		RowFunc: "‚ñ∂ | Choose a function to control player",
		RowRel: "‚ñ∂ | Select a song to add to the queue",
		QueueEmpty: "‚ùå | Empty queue\n‚úÖ | You can add some songs",
		Fields: {
			Search: "Search Tracks",
			Lock: "Lock",
			Lockdes: "Lock player access",
			Unlock: "Unlock",
			Unlockdes: "Unlock player access",
			Loop: "Loop",
			AutoPlay: "AutoPlay",
			Queue: "Queue",
			Mute: "Mute",
			VolInc: "Increase Volume",
			VolDec: "Decrease Volume",
			Shuffle: "Shuffle",
			Filter: "Music Filter",
			Refresh: "Refresh Player",
			Previous: "Previous Track",
			Next: "Next Track",
			PausePlay: "Pause/Play",
			Stop: "Stop",
			SelectTrack: "Select Track",
			Lock: "Lock",
			Lyrics: "Show lyrics",
			UnLock: "UnLock",
			Unmute: "Unmute",
			Save: "Save current queue",
			Link: "Display some link about this music",
		},
	},
	weather: {
		TITLE: "Weather in",
		TEMP: "Temperature",
		HUMIDITY: "Humidity",
		WIND: "Wind",
		CLOUDS: "Clouds",
		PRESSURE: "Pressure",
		SUNRISE: "Sunrise",
		SUNSET: "Sunset",
		COORDINATES: "Coordinates",
		LONGITUDE: "Longitude",
		LATITUDE: "Latitude",
	},
	music: {
		Disconnect: "‚úÖ | Disconnect",
		DisconnectDes: "‚úÖ | Turn off music and leave the voice channel",
		Next: "‚úÖ | Track added to the beginning of the queue.",
		NOvoiceChannel: "‚ùå | You haven't joined a voice channel",
		NOvoiceMe: "‚ùå | The bot is already in another voice channel",
		NOres: "‚ùå | No song found",
		NoPlaying: "‚ùå | No tracks playing.",
		NoPermission: "‚ùå | Bot does not have permission to join or speak in this voice channel",
		HostLeave: "{HOST} has left, {USER} has been selected as host player",
		DownloadOK: "‚úÖ | Download successfully",
		DownloadNG: "‚ùå | Download failed",
		DownloadNGLargeFile: "‚ùå | Download failed, file is too large",
	},
	voiceCommands: {
		Play: "Play",
		Skip: "Skip",
		Volume: "Volume",
		Pause: "Pause",
		Resume: "Resume",
		AutoPlay: "AutoPlay",
		Disconnect: "Disconnect",
		Note: 'The command can have multiple different calls, for example: "skip" can be called as "skip" or "next"',
		LanguageNote: "Change the bot language to detect language more effectively",
	},
	voiceFunc: {
		Play: "Play a song or add to queue",
		Skip: "Skip the current song",
		Volume: "Adjust the volume (0-100)",
		Pause: "Pause music",
		Resume: "Continue music",
		AutoPlay: "Turn on/off auto play",
		Disconnect: "Disconnect from voice channel",
	},
	Lyrics: {
		no_res: "‚ùå | No Lyrics Found!",
		input_name: "Input Lyrics Name",
		disable_slrc: "Disable syncedLyrics",
	},
	RankSystem: {
		hexCOLOR: "HEX color code (e.g. #FF0000)",
		canLv2: "‚ùå | You need to reach level 2 to use this command",
		editOK: "‚úÖ | Successfully updated",
		editNG: "‚ùå | Cannot update user information",
	},
	ttscreate: "‚úÖ | Created TTS voice channel: {thread}",
	Genshin: {
		cookieInvalid: "Invalid cookie",
		cookieEmpty: "Empty cookie",
		cookieGuideTitle: "üç™ HoYoLAB Cookie Guide",
		cookieGuideDescription:
			"HoYoLAB cookie is authentication information needed for the bot to automatically claim daily check-in rewards for you in Genshin Impact.",
		cookieSteps: {
			step1: "**Step 1:** Visit https://www.hoyolab.com/ and login",
			step2: "**Step 2:** Press `F12` to open Developer Tools",
			step3: "**Step 3:** Go to **Application** tab ‚Üí **Cookies** ‚Üí **https://www.hoyolab.com**",
			step4: "**Step 4:** Copy cookies: `ltuid`, `ltoken`, `cookie_token`",
			step5: "**Step 5:** Enter each value separately into corresponding options",
		},
		cookieImportant: "‚ö†Ô∏è **Important Notes:**",
		cookieWarning:
			"‚Ä¢ NEVER share your cookie with others\n‚Ä¢ Cookie may expire and need periodic updates\n‚Ä¢ Only use cookie from your own account",
		cookieExample:
			"**Valid Cookie Example:**\n```\nltuid_v2: 123456789\nltoken_v2: v2_abcdef1234567890abcdef1234567890abcdef12\ncookie_token_v2: v2_xyz7890123456789xyz7890123456789xyz789\n```",
		cookieInvalidReasons:
			"**Reasons for Invalid Cookie:**\n‚Ä¢ LTUID too short (less than 5 characters)\n‚Ä¢ LTOKEN too short (less than 10 characters)\n‚Ä¢ Missing `ltuid_v2` or `ltoken_v2` (required)\n‚Ä¢ Incorrect format",
		cookieEmptyReasons:
			"**Reasons for Empty Cookie:**\n‚Ä¢ You haven't entered cookie in the command\n‚Ä¢ Cookie was accidentally deleted during copy/paste\n‚Ä¢ Only entered part of the cookie",
		cookieFixSteps:
			"**How to Fix:**\n1. Get cookie again from HoYoLAB following the guide above\n2. Copy complete cookie (including both `ltuid_v2` and `ltoken_v2`)\n3. Enter each value into corresponding option in `/genshin bind` command",
		cookieFooter: "If you still have issues, contact server admin for support.",
		notLoggedIn: "Not logged in",
		notLoggedInTitle: "üîê Cookie expired or invalid",
		notLoggedInDescription: "Your HoYoLAB cookie has expired or is invalid. You need to update with a new cookie.",
		notLoggedInReasons:
			"**Possible causes:**\n‚Ä¢ Cookie has expired (usually after 30 days)\n‚Ä¢ HoYoLAB account has logged out\n‚Ä¢ Cookie changed due to re-login\n‚Ä¢ Account temporarily locked",
		notLoggedInFixSteps:
			"**How to fix:**\n1. Visit https://www.hoyolab.com/ and login again\n2. Get new cookie following the guide above\n3. Use `/genshin bind` to update with new cookie\n4. Try `/genshin claim` again",
	},
};
